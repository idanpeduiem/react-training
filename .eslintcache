[{"D:\\Projects\\react-task-master\\blue-callendar\\src\\index.js":"1","D:\\Projects\\react-task-master\\blue-callendar\\src\\serviceWorker.js":"2","D:\\Projects\\react-task-master\\blue-callendar\\src\\app\\store.ts":"3","D:\\Projects\\react-task-master\\blue-callendar\\src\\App.tsx":"4","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\tableFilters\\filters.ts":"5","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskStore\\TaskSlice.ts":"6","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\event\\EventStore\\EventSlice.ts":"7","D:\\Projects\\react-task-master\\blue-callendar\\src\\app\\homePage.tsx":"8","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\editForm\\editForm.tsx":"9","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\editForm\\addForm.tsx":"10","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskStore\\TaskReader.ts":"11","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\event\\EventStore\\EventReader.ts":"12","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\CalendarTasks\\CalendarCompletedTask.ts":"13","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\CalendarTasks\\CalendarTask.ts":"14","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\event\\CalendarEvent\\CalendarEvent.ts":"15","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\CalendarTasks\\CalendarUrgentTask.ts":"16","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\editForm\\taskFormBody.tsx":"17","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\editForm\\tabPanel.tsx":"18","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\editForm\\eventFormBody.tsx":"19","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\CalendarTable\\calendarTable.tsx":"20","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\MenuBar\\menuBar.tsx":"21","D:\\Projects\\react-task-master\\blue-callendar\\src\\assets\\SimpleDate.ts":"22","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\basicEntity\\basicEntity.ts":"23","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\tableFilters\\filterBar.tsx":"24","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\CalendarTable\\calendarTableHead.tsx":"25","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\searchBar\\searchBar.tsx":"26","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\event\\EventTable\\eventCollapseBody.tsx":"27","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskTable\\taskCollapseBody.tsx":"28","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskTable\\taskOther.tsx":"29","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskIcon\\taskPriorityIcon.tsx":"30","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskIcon\\taskTypeIcon.tsx":"31","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\CalendarTable\\calendarTableRow.tsx":"32","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\event\\EventTable\\eventOther.tsx":"33"},{"size":623,"mtime":1615815009000,"results":"34","hashOfConfig":"35"},{"size":5004,"mtime":1615815009000,"results":"36","hashOfConfig":"35"},{"size":572,"mtime":1615815009000,"results":"37","hashOfConfig":"35"},{"size":2214,"mtime":1615815009000,"results":"38","hashOfConfig":"35"},{"size":1654,"mtime":1615815009000,"results":"39","hashOfConfig":"35"},{"size":1082,"mtime":1615815009000,"results":"40","hashOfConfig":"35"},{"size":1119,"mtime":1615815009000,"results":"41","hashOfConfig":"35"},{"size":937,"mtime":1615815009000,"results":"42","hashOfConfig":"35"},{"size":1548,"mtime":1615815009000,"results":"43","hashOfConfig":"35"},{"size":2326,"mtime":1615815009000,"results":"44","hashOfConfig":"35"},{"size":1270,"mtime":1615815009000,"results":"45","hashOfConfig":"35"},{"size":757,"mtime":1615815009000,"results":"46","hashOfConfig":"35"},{"size":990,"mtime":1615815009000,"results":"47","hashOfConfig":"35"},{"size":814,"mtime":1615815009000,"results":"48","hashOfConfig":"35"},{"size":1909,"mtime":1615815009000,"results":"49","hashOfConfig":"35"},{"size":627,"mtime":1615815009000,"results":"50","hashOfConfig":"35"},{"size":10287,"mtime":1615815009000,"results":"51","hashOfConfig":"35"},{"size":476,"mtime":1615815009000,"results":"52","hashOfConfig":"35"},{"size":8548,"mtime":1615815009000,"results":"53","hashOfConfig":"35"},{"size":3449,"mtime":1615815009000,"results":"54","hashOfConfig":"35"},{"size":1818,"mtime":1615815009000,"results":"55","hashOfConfig":"35"},{"size":1267,"mtime":1615815009000,"results":"56","hashOfConfig":"35"},{"size":558,"mtime":1615815009000,"results":"57","hashOfConfig":"35"},{"size":1488,"mtime":1615815009000,"results":"58","hashOfConfig":"35"},{"size":1104,"mtime":1615815009000,"results":"59","hashOfConfig":"35"},{"size":882,"mtime":1615815009000,"results":"60","hashOfConfig":"35"},{"size":1744,"mtime":1615815009000,"results":"61","hashOfConfig":"35"},{"size":1174,"mtime":1615815009000,"results":"62","hashOfConfig":"35"},{"size":1663,"mtime":1615815009000,"results":"63","hashOfConfig":"35"},{"size":477,"mtime":1615815009000,"results":"64","hashOfConfig":"35"},{"size":551,"mtime":1615815009000,"results":"65","hashOfConfig":"35"},{"size":4575,"mtime":1615815009000,"results":"66","hashOfConfig":"35"},{"size":1112,"mtime":1615815009000,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1xb14vu",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"75"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"D:\\Projects\\react-task-master\\blue-callendar\\src\\index.js",[],["142","143"],"D:\\Projects\\react-task-master\\blue-callendar\\src\\serviceWorker.js",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\app\\store.ts",[],["144","145"],"D:\\Projects\\react-task-master\\blue-callendar\\src\\App.tsx",["146","147","148","149","150"],"import React, {useState} from 'react';\nimport './App.css';\nimport {Card, Grid, makeStyles, Table, TableBody, TableCell, TableContainer, TableRow} from \"@material-ui/core\";\nimport {FilterEnum} from './features/tableFilters/filters';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AddForm from \"./features/editForm/addForm\";\nimport EditForm from \"./features/editForm/editForm\";\nimport BasicEntity from \"./features/basicEntity/basicEntity\";\nimport HomePage from \"./app/homePage\";\n\nexport type gridItemType = boolean | \"auto\" | 2 | 1 | 6 | 3 | 4 | 5 | 7 | 8 | 9 | 10 | 11 | 12 | undefined;\n\nfunction App() {\n    const classes = useStyles();\n    const [filter, setFilter] = useState<FilterEnum>(FilterEnum.NO_FILTER);\n    const [searchFilter, setSearchFilter] = useState(\"\");\n    const [editItem, setEditItem] = useState<BasicEntity>();\n    const [cardSize, setCardSize] = useState<gridItemType>(12);\n    return (\n            <Grid className={classes.gridContainer} xs={cardSize}>\n                <Card className={classes.card}>\n                    <Router>\n                        <div>\n                            <Switch>\n                                <Route path=\"/add\">\n                                    <AddForm setCardSize={setCardSize}/>\n                                </Route>\n                                <Route path=\"/edit\">\n                                    <EditForm item={editItem} setCardSize={setCardSize}/>\n                                </Route>\n                                <Route path=\"/\">\n                                    <HomePage searchFilter={searchFilter} filter={filter}\n                                              setEditItem={setEditItem} setFilter={setFilter}\n                                              setSearchFilter={setSearchFilter}/>\n                                </Route>\n                            </Switch>\n                        </div>\n                    </Router>\n                </Card>\n            </Grid>\n    );\n}\n\nexport default App;\n\nconst useStyles = makeStyles({\n    card: {\n        backgroundColor: \"#9ce1ff\"\n    },\n    gridContainer: {\n        justifyContent: \"center\",\n        padding: \"50px 80px\",\n\n    }\n});\n","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\tableFilters\\filters.ts",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskStore\\TaskSlice.ts",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\event\\EventStore\\EventSlice.ts",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\app\\homePage.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\editForm\\editForm.tsx",["151"],"import React, {FC} from \"react\";\nimport {Box, Fab, makeStyles} from \"@material-ui/core\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport BasicEntity from \"../basicEntity/basicEntity\";\nimport CalendarTask from \"../task/CalendarTasks/CalendarTask\";\nimport TaskFormBody from \"./taskFormBody\";\nimport EventFormBody from \"./eventFormBody\";\nimport CalendarEvent from \"../event/CalendarEvent/CalendarEvent\";\nimport {gridItemType} from \"../../App\";\n\ninterface EditFormProps {\n    item: BasicEntity | undefined,\n    setCardSize:  React.Dispatch<React.SetStateAction<gridItemType>>\n}\n\nconst EditForm: FC<EditFormProps> = ({item, setCardSize}) => {\n    const pageHistory = useHistory();\n    setCardSize(4);\n    const classes = useStyles();\n    const formBody = () => {\n      if(item instanceof CalendarTask) {\n          return <TaskFormBody item={item} setCardSize={setCardSize}></TaskFormBody>;\n      }  else if (item instanceof CalendarEvent){\n          return <EventFormBody item={item} setCardSize={setCardSize}></EventFormBody>;\n      }\n    };\n    const handleClose = () => {\n        pageHistory.push('/');\n        setCardSize(12);\n    };\n    return (\n        <>\n            <Box className={classes.box}>\n                <Fab className={classes.fab} onClick={handleClose}><HomeIcon/></Fab>\n            </Box>\n            {formBody()}\n        </>\n    );\n}\n\nconst useStyles = makeStyles({\n    fab: {\n        left: \"48%\"\n    },\n    box: {\n        padding: '10px'\n    }\n});\n\nexport default EditForm;\n","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\editForm\\addForm.tsx",["152"],"import React, {FC, useState} from \"react\";\nimport {Box, makeStyles, Tab, Tabs} from \"@material-ui/core\";\nimport CalendarEvent from \"../event/CalendarEvent/CalendarEvent\";\nimport CalendarTask from \"../task/CalendarTasks/CalendarTask\";\nimport {useSelector} from \"react-redux\";\nimport {selectEvents} from \"../event/EventStore/EventSlice\";\nimport {selectTasks} from \"../task/TaskStore/TaskSlice\";\nimport TabPanel from \"./tabPanel\";\nimport EventFormBody from \"./eventFormBody\";\nimport TaskFormBody from \"./taskFormBody\";\nimport {gridItemType} from \"../../App\";\n\ninterface AddFormProps {\n    setCardSize:  React.Dispatch<React.SetStateAction<gridItemType>>\n}\n\nconst AddForm: FC<AddFormProps> = ({setCardSize}) => {\n    setCardSize(4);\n    const classes = useStyles();\n    const events = useSelector(selectEvents);\n    const tasks = useSelector(selectTasks);\n\n    let id = '0';\n    const time = (new Date()).toISOString();\n\n    if (events.length > 0) {\n        id = events[events.length - 1].getId() + 1;\n    }\n    if (tasks.length > 0) {\n        id = tasks[tasks.length - 1].getId() + 1;\n    }\n    const emptyEvent = new CalendarEvent(id, '', '', time, time, 'BLUE', [], time);\n    const emptyTask = new CalendarTask(id, '', '', '', '', '');\n\n    const eventForm = () => {\n        return <EventFormBody item={emptyEvent} add={true} setCardSize={setCardSize}></EventFormBody>\n    };\n    const taskForm = () => {\n        return <TaskFormBody item={emptyTask} add={true} setCardSize={setCardSize}></TaskFormBody>;\n    };\n\n    const [value, setValue] = useState(0);\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    }\n    return (\n            <Box>\n                <Tabs value={value} onChange={handleChange}>\n                    <Tab label=\"Create Event\">\n                    </Tab>\n                    <Tab label=\"Create Task\">\n                    </Tab>\n                </Tabs>\n                <TabPanel value={value} index={0}>\n                    {eventForm()}\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    {taskForm()}\n                </TabPanel>\n            </Box>\n    );\n};\n\nconst useStyles = makeStyles({\n    fab: {\n        left: \"48%\"\n    },\n    box: {\n        padding: '10px'\n    }\n});\n\nexport default AddForm;\n","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskStore\\TaskReader.ts",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\event\\EventStore\\EventReader.ts",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\CalendarTasks\\CalendarCompletedTask.ts",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\CalendarTasks\\CalendarTask.ts",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\event\\CalendarEvent\\CalendarEvent.ts",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\CalendarTasks\\CalendarUrgentTask.ts",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\editForm\\taskFormBody.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\editForm\\tabPanel.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\editForm\\eventFormBody.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\CalendarTable\\calendarTable.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\MenuBar\\menuBar.tsx",["153","154","155","156","157","158","159","160"],"import React, {FC} from 'react';\nimport {FilterEnum} from \"../tableFilters/filters\";\nimport {\n    AppBar,\n    Fab,\n    Grid,\n    makeStyles,\n    Menu,\n    MenuItem,\n    Table,\n    TableBody,\n    TableCell,\n    TableRow, Toolbar,\n    Typography\n} from \"@material-ui/core\";\nimport SearchBar from \"../searchBar/searchBar\";\nimport FilterBar from \"../tableFilters/filterBar\";\nimport {Link} from \"react-router-dom\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\ninterface MenuBarProps {\n    setSearchFilter: React.Dispatch<React.SetStateAction<string>>,\n    filter: FilterEnum,\n    setFilter: React.Dispatch<React.SetStateAction<FilterEnum>>\n}\n\nconst MenuBar: FC<MenuBarProps> = ({setSearchFilter, filter, setFilter}) => {\n    const classes = useStyles();\n    return (\n            <Toolbar>\n                <Typography className={classes.title}>Blue Calendar</Typography>\n                <div className={classes.searchBar}>\n                    <SearchBar setSearchFilter={setSearchFilter}/>\n                </div>\n                <div className={classes.filterBar}>\n                    <FilterBar setFilter={setFilter} filter={filter}/>\n                </div>\n                <div className={classes.space}></div>\n                <div className={classes.addButton}>\n                    <Link to=\"/add\"><Fab><AddIcon/></Fab></Link>\n                </div>\n            </Toolbar>\n        );\n};\n\nconst useStyles = makeStyles({\n    title: {\n        fontSize: \"34px\",\n        textAlign: \"center\",\n        fontWeight: \"bold\",\n        margin: \"10px\",\n        width: \"20%\"\n    },\n    searchBar: {\n        margin: \"10px\",\n        width: \"20%\"\n    },\n    filterBar: {\n        margin: \"10px\",\n        width: \"60%\"\n    },\n    addButton: {\n        margin: \"20px\"\n    },\n    space: {\n        width: \"21%\"\n    }\n})\n\nexport default MenuBar;","D:\\Projects\\react-task-master\\blue-callendar\\src\\assets\\SimpleDate.ts",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\basicEntity\\basicEntity.ts",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\tableFilters\\filterBar.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\CalendarTable\\calendarTableHead.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\searchBar\\searchBar.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\event\\EventTable\\eventCollapseBody.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskTable\\taskCollapseBody.tsx",["161"],"import React, {FC} from 'react';\nimport {makeStyles, TableBody, TableCell, TableRow, Typography} from \"@material-ui/core\";\nimport CalendarTask from \"../CalendarTasks/CalendarTask\";\nimport CalendarCompletedTask from \"../CalendarTasks/CalendarCompletedTask\";\n\ninterface TaskCollapseBodyProps {\n    task: CalendarTask,\n}\n\nconst TaskCollapseBody: FC<TaskCollapseBodyProps> = ({task}) => {\n    const classes = useStyles();\n    const taskReview = () => {\n        if (task instanceof CalendarCompletedTask) {\n            return (<TableRow>\n                    <TableCell className={classes.borderlessTableCell}>\n                        <Typography>Review:&nbsp;{task.getReview()}</Typography>\n                    </TableCell>\n                </TableRow>\n            );\n        }\n    }\n    return (\n        <>\n            <TableRow>\n                <TableCell>\n                    <Typography>Description:&nbsp;{task.getDescription()}</Typography>\n                </TableCell>\n            </TableRow>\n            {taskReview()}\n        </>\n    );\n}\n\nexport default TaskCollapseBody;\n\nconst useStyles = makeStyles({\n    borderlessTableCell: {\n        borderBottom: \"none\",\n    },\n});","D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskTable\\taskOther.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskIcon\\taskPriorityIcon.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\task\\TaskIcon\\taskTypeIcon.tsx",[],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\CalendarTable\\calendarTableRow.tsx",[],["162","163"],"D:\\Projects\\react-task-master\\blue-callendar\\src\\features\\event\\EventTable\\eventOther.tsx",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":3,"column":33,"nodeType":"170","messageId":"171","endLine":3,"endColumn":38},{"ruleId":"168","severity":1,"message":"172","line":3,"column":40,"nodeType":"170","messageId":"171","endLine":3,"endColumn":49},{"ruleId":"168","severity":1,"message":"173","line":3,"column":51,"nodeType":"170","messageId":"171","endLine":3,"endColumn":60},{"ruleId":"168","severity":1,"message":"174","line":3,"column":62,"nodeType":"170","messageId":"171","endLine":3,"endColumn":76},{"ruleId":"168","severity":1,"message":"175","line":3,"column":78,"nodeType":"170","messageId":"171","endLine":3,"endColumn":86},{"ruleId":"168","severity":1,"message":"176","line":3,"column":9,"nodeType":"170","messageId":"171","endLine":3,"endColumn":13},{"ruleId":"168","severity":1,"message":"177","line":19,"column":11,"nodeType":"170","messageId":"171","endLine":19,"endColumn":18},{"ruleId":"168","severity":1,"message":"178","line":4,"column":5,"nodeType":"170","messageId":"171","endLine":4,"endColumn":11},{"ruleId":"168","severity":1,"message":"179","line":6,"column":5,"nodeType":"170","messageId":"171","endLine":6,"endColumn":9},{"ruleId":"168","severity":1,"message":"180","line":8,"column":5,"nodeType":"170","messageId":"171","endLine":8,"endColumn":9},{"ruleId":"168","severity":1,"message":"181","line":9,"column":5,"nodeType":"170","messageId":"171","endLine":9,"endColumn":13},{"ruleId":"168","severity":1,"message":"169","line":10,"column":5,"nodeType":"170","messageId":"171","endLine":10,"endColumn":10},{"ruleId":"168","severity":1,"message":"172","line":11,"column":5,"nodeType":"170","messageId":"171","endLine":11,"endColumn":14},{"ruleId":"168","severity":1,"message":"173","line":12,"column":5,"nodeType":"170","messageId":"171","endLine":12,"endColumn":14},{"ruleId":"168","severity":1,"message":"175","line":13,"column":5,"nodeType":"170","messageId":"171","endLine":13,"endColumn":13},{"ruleId":"168","severity":1,"message":"172","line":2,"column":21,"nodeType":"170","messageId":"171","endLine":2,"endColumn":30},{"ruleId":"164","replacedBy":"182"},{"ruleId":"166","replacedBy":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"@typescript-eslint/no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableRow' is defined but never used.","'Link' is defined but never used.","'classes' is assigned a value but never used.","'AppBar' is defined but never used.","'Grid' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.",["184"],["185"],"no-global-assign","no-unsafe-negation"]